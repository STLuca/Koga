parser machineReference;

usables {
    core.Int;
}

core.MemberReference<Document R> {

    Byte[4] instance;

    constructor(Int in) {
        i(ADD, TI, LDA, instance, ADA, in.val, IL, 0d0);
    }

    invoke(Name methodName) {
        Byte[4] protocol;
        Byte[4] adminConnectMethod;
        Symbol(METHOD, adminConnectSymbol, IL, core.Administrator, IL, connect);
        Symbol(METHOD, protocolMethodSymbol, LG, R, AL, methodName);
        c(ADDR, LI, adminConnectMethod, table, adminConnectSymbol);
        c(SIZE, LI, protocol, table, protocolMethodSymbol);
        Byte[4] adminTask;
        i(ADD, LI, LDA, adminTask, R, altTask, IL, 0d0);

        m(COPY, TII, LDA, adminTask, LDA, instance, LDS, instance);
        i(ADD, TI, LDA, adminTask, LDA, adminTask, LDS, instance);
        m(COPY, TII, LDA, adminTask, LDA, protocol, LDS, protocol);
        i(ADD, TI, LDA, adminTask, LDA, adminTask, LDS, protocol);
        m(COPY, TII, LDA, adminTask, LDA, protocol, LDS, protocol);
        i(ADD, TI, LDA, adminTask, LDA, adminTask, LDS, protocol);
        Args();
        logician(START_ADMIN, T, LDA, adminConnectMethod);

        Byte[4] adminSendMethod;
        Symbol(METHOD, adminSendSymbol, IL, core.Administrator, IL, send);
        c(ADDR, LI, adminSendMethod, table, adminSendSymbol);
        logician(START_ADMIN, T, LDA, adminSendMethod);
    }

    arg(Variable a, Name methodName) {
        m(COPY, TII, LDA, adminTask, ADA, a, IL, 0d4);
        i(ADD, TI, LDA, adminTask, LDA, adminTask, IL, 0d4);
    }

}
