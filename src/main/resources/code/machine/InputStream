parser machine;

usables {
    core.Int;
    core.String;
}

core.InputStream {

    Byte[4] root;
    Byte[4] current;

    constructor(Int in) {
        i(ADD, TI, LDA, root, ADA, in.val, IL, 0d0);
        i(ADD, TI, LDA, current, ADA, in.val, IL, 0d0);
    }

    constructor port() {
        i(ADD, LI, LDA, root, R, task, LDA, root);
        Admin(PORT, root);
        i(ADD, TI, LDA, current, LDA, root, IL, 0d0);
    }

    peek(Int x) {
        m(COPY, ITI, ADA, x, LDA, current, ADS, x);
    }

    readToInt(Int x) {
        m(COPY, ITI, ADA, x, LDA, current, ADS, x);
        i(ADD, TI, LDA, current, LDA, current, IL, 0d4);
    }

    readToString(String s) {
        i(ADD, TI, ADA, s.start, LDA, current, IL, 0d0);
        i(ADD, TT, current, current, s.size);
    }

    copyToString(String s) {
        m(COPY, TTT, ADA, s.start, LDA, current, ADA, s.size);
        i(ADD, TT, current, current, s.size);
    }

    wait() {
        Addr end;
        Byte[4] in;
        i(ADD, II, LDA, in, IL, 0d0, IL, 0d0);
        Addr read;
        m(COPY, ITI, LDA, in, LDA, current, LDS, in);
        cb(NEQ, TI, LDA, in, IL, 0d0, end);
        j(REL, I, read);
        Addr end;
    }

}