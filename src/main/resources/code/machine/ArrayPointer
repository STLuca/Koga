parser machine;

ArrayPointer<Usable T> {

    byte[4] start;
    byte[4] size;
    byte[4] step;
    byte[4] addr;

    constructor(Array arr) {
        i(ADD, TI, LDA, start, ADA, arr.start, IL, 0d0);
        i(ADD, TI, LDA, size, ADA, arr.size, IL, 0d0);
        i(ADD, TI, LDA, step, ADA, arr.step, IL, 0d0);
        i(ADD, TI, LDA, addr, LDA, start, IL, 0d0);
    }

    constructor(String str) {
        i(ADD, TI, LDA, start, ADA, str.start, IL, 0d0);
        i(ADD, TI, LDA, size, ADA, str.size, IL, 0d0);
        i(ADD, TI, LDA, step, ADA, str.step, IL, 0d0);
        i(ADD, TI, LDA, addr, LDA, start, IL, 0d0);
    }

    index(b12 imm) {
        byte[4] index;
        i(ADD, II, LDA, index, IL, 0d0, AL, imm);
        math(MULT, TT, LDA, index, LDA, index, LDA, step);
        i(ADD, TT, LDA, addr, LDA, start, LDA, index);
    }

    index(Int int) {
        byte[4] index;
        i(ADD, TI, LDA, index, ADA, int.val, IL, 0d0);
        math(MULT, TT, LDA, index, LDA, index, LDA, step);
        i(ADD, TT, LDA, addr, LDA, start, LDA, index);
    }

    indexInt(Int int) {
        byte[4] index;
        i(ADD, TI, LDA, index, ADA, int.val, IL, 0d0);
        math(MULT, TT, LDA, index, LDA, index, LDA, step);
        i(ADD, TT, LDA, addr, LDA, start, LDA, index);
    }

    copyTo(Any val) {
        m(COPY, ITI, ADA, val, LDA, addr, LG, T);
    }

    copyFrom(Any val) {
        m(COPY, TII, LDA, addr, ADA, val, LG, T);
    }

}