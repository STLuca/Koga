parser machine;

usables {
    core.Int;
    core.Boolean;
}

core.If {

    Addr end;

    constructor(Int bool, Block block) {
        Addr after;
        cb(EQ, TI, ADA, bool.val, IL, 0d0, after);
        Block block;
        j(REL, I, end);
        Addr after;
        Addr end;
    }

    constructor(Boolean bool, Block block) {
        Addr after;
        cb(EQ, TI, ADA, bool.val, IL, 0d0, after);
        Block block;
        j(REL, I, end);
        Addr after;
        Addr end;
    }

    elseIf(Int bool, Block block) {
        Addr after;
        Position end prev;
        cb(EQ, TI, ADA, bool.val, IL, 0d0, after);
        Block block;
        j(REL, I, end);
        Addr after;
        Position prev;
    }

    elseIf(Boolean bool, Block block) {
        Addr after;
        Position end prev;
        cb(EQ, TI, ADA, bool.val, IL, 0d0, after);
        Block block;
        j(REL, I, end);
        Addr after;
        Position prev;
    }

    else(Block block) {
        Position end prev;
        Block block;
        Position prev;
    }

    break() {
        j(REL, I, end);
    }

}